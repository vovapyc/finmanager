version: '3.3'

volumes:
  postgres_data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: python manage.py runserver 0.0.0.0:8000
    entrypoint: /entrypoint.sh
    restart: on-failure

  frontend:
    image: node:10-alpine
    command: npm run serve
    volumes:
      - ./frontend:/app
    working_dir: /app
    restart: on-failure

  postgres:
    image: postgres:10-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 3Jwswhbj
      POSTGRES_USER: dbuser
      POSTGRES_DB: db

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/staticfiles/:/staticfiles/
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: none
